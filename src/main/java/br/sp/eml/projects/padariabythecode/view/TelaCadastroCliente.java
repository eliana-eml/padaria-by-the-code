package br.sp.eml.projects.padariabythecode.view;

import br.sp.eml.projects.padariabythecode.dao.ClienteDAO;
import br.sp.eml.projects.padariabythecode.model.Cliente;
import br.sp.eml.projects.padariabythecode.utils.Utils;
import br.sp.eml.projects.padariabythecode.utils.Validador;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import br.sp.eml.projects.padariabythecode.secondscreens.TelaEditarCadastroClientes;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

/**
 *
 * @author narum
 */
public class TelaCadastroCliente extends javax.swing.JFrame {

    /**
     * Construtor da classe TelaCadastroCliente. Inicializa os componentes
     * gráficos gerados automaticamente. Em seguida, define a posição da janela
     * ao centro da tela.
     */
    public TelaCadastroCliente() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCabecalho = new javax.swing.JPanel();
        btnNavBarVendas = new javax.swing.JButton();
        btnNavBarRelatorio = new javax.swing.JButton();
        btnNavBarProdutos = new javax.swing.JButton();
        lblBTCBakery = new javax.swing.JLabel();
        lblLogotipo = new javax.swing.JLabel();
        pnlClientes = new javax.swing.JPanel();
        lblTituloClientes = new javax.swing.JLabel();
        pnlCadastroCliente = new javax.swing.JPanel();
        lblCadastro = new javax.swing.JLabel();
        pnlDadosBasicos = new javax.swing.JPanel();
        lblDadosBasicos = new javax.swing.JLabel();
        lblCliente_CPF = new javax.swing.JLabel();
        txtCPFCliente = new javax.swing.JFormattedTextField();
        lblCliente_dtNasc = new javax.swing.JLabel();
        txtDtNascimentoCliente = new javax.swing.JFormattedTextField();
        lblCliente_Genero = new javax.swing.JLabel();
        txtGeneroCliente = new javax.swing.JTextField();
        lblCliente_EstCivil = new javax.swing.JLabel();
        txtEstadoCivilCliente = new javax.swing.JTextField();
        lblCliente_Nome = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        lblCliente_TelFixo = new javax.swing.JLabel();
        txtTelFixCliente = new javax.swing.JFormattedTextField();
        lblCliente_Email = new javax.swing.JLabel();
        txtEmailCliente = new javax.swing.JTextField();
        pnlEndereco = new javax.swing.JPanel();
        lblCliente_End = new javax.swing.JLabel();
        lblCliente_CEP = new javax.swing.JLabel();
        txtCEPCliente = new javax.swing.JFormattedTextField();
        lblCliente_Log = new javax.swing.JLabel();
        txtLogCliente = new javax.swing.JTextField();
        lblCliente_Num = new javax.swing.JLabel();
        txtNumCliente = new javax.swing.JFormattedTextField();
        lblCliente_Compl = new javax.swing.JLabel();
        txtComplementoCliente = new javax.swing.JTextField();
        lblCliente_Bairro = new javax.swing.JLabel();
        txtBairroCliente = new javax.swing.JTextField();
        lblCliente_Cid = new javax.swing.JLabel();
        txtCidadeCliente = new javax.swing.JTextField();
        lblCliente_UF = new javax.swing.JLabel();
        cboUFCliente = new javax.swing.JComboBox<>();
        btnCadastrar = new javax.swing.JButton();
        btnLimparCampos = new javax.swing.JButton();
        pnlListaClientes = new javax.swing.JPanel();
        lblListaClientes = new javax.swing.JLabel();
        tblCadastoCliente = new javax.swing.JScrollPane();
        tblCadClientes = new javax.swing.JTable();
        pnlBuscarCliente = new javax.swing.JPanel();
        lblBuscarCliente = new javax.swing.JLabel();
        lblBuscaCliente_Nome = new javax.swing.JLabel();
        txtBuscaCliente_Nome = new javax.swing.JTextField();
        lblBuscaClienteCPF = new javax.swing.JLabel();
        txtBuscaCliente_CPF = new javax.swing.JFormattedTextField();
        btnBuscarCliente = new javax.swing.JButton();
        lblBuscaNome = new javax.swing.JLabel();
        lblBuscaCPF = new javax.swing.JLabel();
        lblBuscaDtNasc = new javax.swing.JLabel();
        lblBuscaTel = new javax.swing.JLabel();
        lblBuscaEnd = new javax.swing.JLabel();
        btnEditarCadastro = new javax.swing.JButton();
        btnLimparBusca = new javax.swing.JButton();
        btnBuscarPorNomeCliente = new javax.swing.JButton();
        btnExcluirCadastro = new javax.swing.JButton();
        btnAtualizarTabela = new javax.swing.JButton();
        pnlRodape1 = new javax.swing.JPanel();
        pnlDataAtual = new javax.swing.JLabel();
        mnuBar = new javax.swing.JMenuBar();
        mnuArquivos = new javax.swing.JMenu();
        mnuItemCadastroClientes = new javax.swing.JMenuItem();
        mnuItemCadastroProdutos = new javax.swing.JMenuItem();
        mnuItemRelatorioVendas = new javax.swing.JMenuItem();
        mnuEditar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlCabecalho.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlCabecalho.setPreferredSize(new java.awt.Dimension(657, 63));

        btnNavBarVendas.setText("Vendas");
        btnNavBarVendas.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnNavBarVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNavBarVendasActionPerformed(evt);
            }
        });

        btnNavBarRelatorio.setText("Relatório de Vendas");
        btnNavBarRelatorio.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnNavBarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNavBarRelatorioActionPerformed(evt);
            }
        });

        btnNavBarProdutos.setText("Produtos");
        btnNavBarProdutos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnNavBarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNavBarProdutosActionPerformed(evt);
            }
        });

        lblBTCBakery.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblBTCBakery.setText("By The Code Bakery");
        lblBTCBakery.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblLogotipo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblLogotipo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogotipo.setText("LOGO");
        lblLogotipo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblLogotipo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlCabecalhoLayout = new javax.swing.GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogotipo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblBTCBakery, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNavBarVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNavBarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNavBarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnNavBarRelatorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNavBarProdutos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBTCBakery, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(lblLogotipo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNavBarVendas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlClientes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTituloClientes.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTituloClientes.setText("CLIENTES");

        javax.swing.GroupLayout pnlClientesLayout = new javax.swing.GroupLayout(pnlClientes);
        pnlClientes.setLayout(pnlClientesLayout);
        pnlClientesLayout.setHorizontalGroup(
            pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlClientesLayout.setVerticalGroup(
            pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlCadastroCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblCadastro.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblCadastro.setText("CADASTRO");

        pnlDadosBasicos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblDadosBasicos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDadosBasicos.setText("Dados Básicos");

        lblCliente_CPF.setText("CPF:");

        try {
            txtCPFCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPFCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCPFCliente.setName("CPF Cliente"); // NOI18N
        txtCPFCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFClienteActionPerformed(evt);
            }
        });

        lblCliente_dtNasc.setText("Data de Nascimento:");

        try {
            txtDtNascimentoCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDtNascimentoCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDtNascimentoCliente.setName("Data de Nascimento"); // NOI18N
        txtDtNascimentoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDtNascimentoClienteActionPerformed(evt);
            }
        });
        txtDtNascimentoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDtNascimentoClienteKeyTyped(evt);
            }
        });

        lblCliente_Genero.setText("Gênero:");

        txtGeneroCliente.setName("Gênero"); // NOI18N
        txtGeneroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGeneroClienteActionPerformed(evt);
            }
        });
        txtGeneroCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGeneroClienteKeyTyped(evt);
            }
        });

        lblCliente_EstCivil.setText("Estado Civil:");

        txtEstadoCivilCliente.setName("Estado Civil"); // NOI18N
        txtEstadoCivilCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstadoCivilClienteActionPerformed(evt);
            }
        });
        txtEstadoCivilCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEstadoCivilClienteKeyTyped(evt);
            }
        });

        lblCliente_Nome.setText("Nome do Cliente:");

        txtNomeCliente.setName("Nome do Cliente"); // NOI18N
        txtNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeClienteKeyTyped(evt);
            }
        });

        lblCliente_TelFixo.setText("Telefone Fixo:");

        try {
            txtTelFixCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelFixCliente.setName("Telefone Fixo"); // NOI18N
        txtTelFixCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelFixClienteActionPerformed(evt);
            }
        });

        lblCliente_Email.setText("E-mail:");

        txtEmailCliente.setName("Email"); // NOI18N
        txtEmailCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailClienteKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosBasicosLayout = new javax.swing.GroupLayout(pnlDadosBasicos);
        pnlDadosBasicos.setLayout(pnlDadosBasicosLayout);
        pnlDadosBasicosLayout.setHorizontalGroup(
            pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDadosBasicos)
                    .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                        .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCliente_CPF)
                            .addComponent(txtCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCliente_TelFixo)
                            .addComponent(txtTelFixCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmailCliente)
                            .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                                .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                                        .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCliente_dtNasc)
                                            .addComponent(txtDtNascimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCliente_Genero)
                                            .addComponent(txtGeneroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblCliente_EstCivil))
                                    .addComponent(lblCliente_Email))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(lblCliente_Nome)
                    .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtEstadoCivilCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNomeCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDadosBasicosLayout.setVerticalGroup(
            pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosBasicosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDadosBasicos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCliente_Nome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                        .addComponent(lblCliente_CPF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                        .addComponent(lblCliente_dtNasc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDtNascimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                        .addComponent(lblCliente_Genero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGeneroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEstadoCivilCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                        .addComponent(lblCliente_EstCivil)
                        .addGap(28, 28, 28)))
                .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlDadosBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCliente_TelFixo)
                            .addComponent(lblCliente_Email))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelFixCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDadosBasicosLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9))
        );

        pnlEndereco.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblCliente_End.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCliente_End.setText("Endereço");

        lblCliente_CEP.setText("CEP:");

        try {
            txtCEPCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCEPCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCEPCliente.setName("CEP"); // NOI18N

        lblCliente_Log.setText("Logradouro:");

        txtLogCliente.setName("Logradouro"); // NOI18N
        txtLogCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLogClienteActionPerformed(evt);
            }
        });
        txtLogCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLogClienteKeyTyped(evt);
            }
        });

        lblCliente_Num.setText("Nº:");

        txtNumCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtNumCliente.setName("Número"); // NOI18N
        txtNumCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumClienteKeyTyped(evt);
            }
        });

        lblCliente_Compl.setText("Complemento:");

        txtComplementoCliente.setName("Complemento"); // NOI18N
        txtComplementoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtComplementoClienteKeyTyped(evt);
            }
        });

        lblCliente_Bairro.setText("Bairro:");

        txtBairroCliente.setName("Bairro"); // NOI18N
        txtBairroCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBairroClienteKeyTyped(evt);
            }
        });

        lblCliente_Cid.setText("Cidade:");

        txtCidadeCliente.setName("Cidade"); // NOI18N
        txtCidadeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCidadeClienteKeyTyped(evt);
            }
        });

        lblCliente_UF.setText("UF:");

        cboUFCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        cboUFCliente.setName("UF"); // NOI18N
        cboUFCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboUFClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEnderecoLayout = new javax.swing.GroupLayout(pnlEndereco);
        pnlEndereco.setLayout(pnlEnderecoLayout);
        pnlEnderecoLayout.setHorizontalGroup(
            pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEnderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEnderecoLayout.createSequentialGroup()
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCliente_CEP)
                            .addComponent(txtCEPCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCliente_Log)
                            .addComponent(txtLogCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEnderecoLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lblCliente_Num)
                                .addGap(22, 22, 22))
                            .addComponent(txtNumCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtComplementoCliente)
                            .addGroup(pnlEnderecoLayout.createSequentialGroup()
                                .addComponent(lblCliente_Compl)
                                .addGap(147, 147, 147))))
                    .addComponent(lblCliente_End)
                    .addGroup(pnlEnderecoLayout.createSequentialGroup()
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCliente_Bairro)
                            .addComponent(txtBairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCliente_Cid))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCliente_UF)
                            .addComponent(cboUFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(7, 7, 7))
        );
        pnlEnderecoLayout.setVerticalGroup(
            pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEnderecoLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEnderecoLayout.createSequentialGroup()
                        .addComponent(lblCliente_End)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCliente_CEP)
                            .addComponent(lblCliente_Log))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCEPCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLogCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCliente_Bairro)
                            .addComponent(lblCliente_Cid))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboUFCliente)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEnderecoLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtBairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCidadeCliente)))
                    .addGroup(pnlEnderecoLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(pnlEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlEnderecoLayout.createSequentialGroup()
                                .addComponent(lblCliente_Num)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlEnderecoLayout.createSequentialGroup()
                                .addComponent(lblCliente_Compl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtComplementoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addComponent(lblCliente_UF, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnLimparCampos.setText("Limpar Campos");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCadastroClienteLayout = new javax.swing.GroupLayout(pnlCadastroCliente);
        pnlCadastroCliente.setLayout(pnlCadastroClienteLayout);
        pnlCadastroClienteLayout.setHorizontalGroup(
            pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDadosBasicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                        .addComponent(lblCadastro)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                        .addComponent(btnLimparCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCadastroClienteLayout.setVerticalGroup(
            pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDadosBasicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(btnLimparCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlListaClientes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblListaClientes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblListaClientes.setText("LISTA DE CLIENTES");

        tblCadClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Cliente", "Nome", "CPF", "Data Nascimento", "Gênero", "Estado Civil", "Telefone", "E-mail", "CEP", "Logradouro", "Nº", "Complemento", "Bairro", "Cidade", "UF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCadClientes.setToolTipText("");
        tblCadClientes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblCadClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblCadastoCliente.setViewportView(tblCadClientes);

        javax.swing.GroupLayout pnlListaClientesLayout = new javax.swing.GroupLayout(pnlListaClientes);
        pnlListaClientes.setLayout(pnlListaClientesLayout);
        pnlListaClientesLayout.setHorizontalGroup(
            pnlListaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlListaClientesLayout.createSequentialGroup()
                        .addComponent(lblListaClientes)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tblCadastoCliente))
                .addContainerGap())
        );
        pnlListaClientesLayout.setVerticalGroup(
            pnlListaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblListaClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tblCadastoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlBuscarCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblBuscarCliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblBuscarCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBuscarCliente.setText("BUSCAR CLIENTE");

        lblBuscaCliente_Nome.setText("Nome Cliente:");

        txtBuscaCliente_Nome.setName("Nome Cliente"); // NOI18N
        txtBuscaCliente_Nome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscaCliente_NomeKeyTyped(evt);
            }
        });

        lblBuscaClienteCPF.setText("CPF:");

        try {
            txtBuscaCliente_CPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBuscaCliente_CPF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBuscaCliente_CPF.setName("CPF Cliente"); // NOI18N
        txtBuscaCliente_CPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaCliente_CPFActionPerformed(evt);
            }
        });

        btnBuscarCliente.setText("Buscar Por CPF");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        lblBuscaNome.setText("Cliente:");

        lblBuscaCPF.setText("CPF:");

        lblBuscaDtNasc.setText("Data de Nascimento:");

        lblBuscaTel.setText("Telefone:");

        lblBuscaEnd.setText("Endereço:");

        btnEditarCadastro.setText("Editar Cadastro");
        btnEditarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCadastroActionPerformed(evt);
            }
        });

        btnLimparBusca.setText("Limpar Busca");
        btnLimparBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparBuscaActionPerformed(evt);
            }
        });

        btnBuscarPorNomeCliente.setText("Buscar Por Nome");
        btnBuscarPorNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorNomeClienteActionPerformed(evt);
            }
        });

        btnExcluirCadastro.setText("Excluir Cadastro");
        btnExcluirCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirCadastroActionPerformed(evt);
            }
        });

        btnAtualizarTabela.setText("Atualizar Tabela");
        btnAtualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuscarClienteLayout = new javax.swing.GroupLayout(pnlBuscarCliente);
        pnlBuscarCliente.setLayout(pnlBuscarClienteLayout);
        pnlBuscarClienteLayout.setHorizontalGroup(
            pnlBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBuscarClienteLayout.createSequentialGroup()
                        .addComponent(btnLimparBusca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarCadastro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluirCadastro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtualizarTabela))
                    .addGroup(pnlBuscarClienteLayout.createSequentialGroup()
                        .addGroup(pnlBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBuscaCliente_Nome)
                            .addComponent(lblBuscaCliente_Nome)
                            .addComponent(btnBuscarPorNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblBuscaClienteCPF)
                            .addComponent(txtBuscaCliente_CPF)
                            .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblBuscarCliente)
                    .addComponent(lblBuscaNome)
                    .addComponent(lblBuscaCPF)
                    .addComponent(lblBuscaDtNasc)
                    .addComponent(lblBuscaTel)
                    .addComponent(lblBuscaEnd))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBuscarClienteLayout.setVerticalGroup(
            pnlBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBuscarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscaCliente_Nome)
                    .addComponent(lblBuscaClienteCPF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(pnlBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscaCliente_Nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscaCliente_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarPorNomeCliente)
                    .addComponent(btnBuscarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBuscaNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBuscaCPF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBuscaDtNasc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBuscaTel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBuscaEnd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarCadastro)
                    .addComponent(btnLimparBusca)
                    .addComponent(btnExcluirCadastro)
                    .addComponent(btnAtualizarTabela))
                .addGap(12, 12, 12))
        );

        pnlRodape1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlRodape1.setPreferredSize(new java.awt.Dimension(151, 36));

        pnlDataAtual.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pnlDataAtual.setText("26/09/2023");

        javax.swing.GroupLayout pnlRodape1Layout = new javax.swing.GroupLayout(pnlRodape1);
        pnlRodape1.setLayout(pnlRodape1Layout);
        pnlRodape1Layout.setHorizontalGroup(
            pnlRodape1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRodape1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlDataAtual)
                .addContainerGap())
        );
        pnlRodape1Layout.setVerticalGroup(
            pnlRodape1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDataAtual, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        mnuArquivos.setText("Arquivos");

        mnuItemCadastroClientes.setText("Cadastro Cliente");
        mnuItemCadastroClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemCadastroClientesActionPerformed(evt);
            }
        });
        mnuArquivos.add(mnuItemCadastroClientes);

        mnuItemCadastroProdutos.setText("Cadastro Produto");
        mnuItemCadastroProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemCadastroProdutosActionPerformed(evt);
            }
        });
        mnuArquivos.add(mnuItemCadastroProdutos);

        mnuItemRelatorioVendas.setText("Relatório de Vendas");
        mnuItemRelatorioVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemRelatorioVendasActionPerformed(evt);
            }
        });
        mnuArquivos.add(mnuItemRelatorioVendas);

        mnuBar.add(mnuArquivos);

        mnuEditar.setText("Editar");
        mnuBar.add(mnuEditar);

        setJMenuBar(mnuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCabecalho, javax.swing.GroupLayout.DEFAULT_SIZE, 1068, Short.MAX_VALUE)
                    .addComponent(pnlRodape1, javax.swing.GroupLayout.DEFAULT_SIZE, 1068, Short.MAX_VALUE)
                    .addComponent(pnlClientes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlCadastroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlBuscarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlListaClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCabecalho, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlListaClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlCadastroCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRodape1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNavBarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNavBarRelatorioActionPerformed

        /**
         * Instancia um novo objeto da classe TelaRelatorio e o torna visível.
         * Em seguida, oculta a janela atual.
         */
        new TelaRelatorio().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnNavBarRelatorioActionPerformed

    private void txtEstadoCivilClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstadoCivilClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstadoCivilClienteActionPerformed

    private void cboUFClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboUFClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboUFClienteActionPerformed

    private void btnNavBarVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNavBarVendasActionPerformed

        /**
         * Instancia um novo objeto da classe TelaPrincipalVendas e o torna
         * visível. Em seguida, oculta a janela atual.
         */
        new TelaPrincipalVendas().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnNavBarVendasActionPerformed

    private void btnNavBarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNavBarProdutosActionPerformed

        /**
         * Instancia um novo objeto da classe TelaProdutos e o torna visível. Em
         * seguida, oculta a janela atual.
         */
        new TelaProdutos().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnNavBarProdutosActionPerformed

    private void txtLogClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLogClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLogClienteActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed

        /**
         * Intâncio um objeto da classe Validador para validar os campos de
         * texto. Em seguida, verifica se ocorreram erros durante a validação.
         */
        Validador validacao = new Validador();
        validacao.validarTexto(txtBuscaCliente_CPF);

        /**
         * Se houver erros, obtém as mensagens de erro e o exibe na tela. Caso
         * contrário, exibe os valores válidos nos rótulos correspondentes
         * (lblBuscaNome & lblBuscaCPF).
         */
        if (validacao.hasErro()) {
            String mensagensDeErro = validacao.getMensagensErro();
            JOptionPane.showMessageDialog(rootPane, mensagensDeErro);
        } else {

            String cpfClienteBuscar = txtBuscaCliente_CPF.getText();
            Cliente cliente = ClienteDAO.buscarPorCPFCliente(cpfClienteBuscar);

            DefaultTableModel modelo = (DefaultTableModel) tblCadClientes.getModel();
            modelo.setRowCount(0);

            modelo.addRow(new String[]{
                String.valueOf(cliente.getIdCliente()),
                String.valueOf(cliente.getNomeCliente()),
                String.valueOf(cliente.getCpfCliente()),
                String.valueOf(cliente.getDataNascimentoCliente()),
                String.valueOf(cliente.getGeneroCliente()),
                String.valueOf(cliente.getEstadoCivilCliente()),
                String.valueOf(cliente.getTelefoneCliente()),
                String.valueOf(cliente.getEmailCliente()),
                String.valueOf(cliente.getCepCliente()),
                String.valueOf(cliente.getLogradouroCliente()),
                String.valueOf(cliente.getNumeroCliente()),
                String.valueOf(cliente.getComplementoCliente()),
                String.valueOf(cliente.getBairroCliente()),
                String.valueOf(cliente.getCidadeCliente()),
                String.valueOf(cliente.getUfCliente())
            });

            String enderecoCompleto = cliente.getLogradouroCliente() + ", " + cliente.getNumeroCliente() + " - " + 
                                      cliente.getComplementoCliente() + " - " + cliente.getBairroCliente() + " - " +
                                      cliente.getCidadeCliente() + " - " + cliente.getUfCliente();
            
            lblBuscaNome.setText("Cliente: " + cliente.getNomeCliente());
            lblBuscaCPF.setText("CPF: " + cliente.getCpfCliente());
            lblBuscaDtNasc.setText("Data de Nascimento: " + cliente.getDataNascimentoCliente());
            lblBuscaTel.setText("Telefone: " + cliente.getTelefoneCliente());
            lblBuscaEnd.setText("Endereço: " + enderecoCompleto);
        }

    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnEditarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCadastroActionPerformed

        int linhaSelecionada = tblCadClientes.getSelectedRow();

        if (linhaSelecionada >= 0) {

            DefaultTableModel modelo = (DefaultTableModel) tblCadClientes.getModel();

//            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
//            Utils utilitario = new Utils();
            int idSelecionado = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());
            String nomeSelecionado = modelo.getValueAt(linhaSelecionada, 1).toString();
            String cpfSelecionado = modelo.getValueAt(linhaSelecionada, 2).toString();
            
            Date dataNascimentoSelecionada = Date.valueOf(((modelo.getValueAt(linhaSelecionada, 3).toString())));
            
            String generoSelecionado = modelo.getValueAt(linhaSelecionada, 4).toString();
            String estadoCivilSelecionado = modelo.getValueAt(linhaSelecionada, 5).toString();
            String telefoneSelecionado = modelo.getValueAt(linhaSelecionada, 6).toString();
            String emailSelecionado = modelo.getValueAt(linhaSelecionada, 7).toString();
            String cepSelecionado = modelo.getValueAt(linhaSelecionada, 8).toString();
            String logradouroSelecionado = modelo.getValueAt(linhaSelecionada, 9).toString();
            String numeroSelecionado = modelo.getValueAt(linhaSelecionada, 10).toString();
            String complementoSelecionado = modelo.getValueAt(linhaSelecionada, 11).toString();
            String bairroSelecionado = modelo.getValueAt(linhaSelecionada, 12).toString();
            String cidadeSelecionada = modelo.getValueAt(linhaSelecionada, 13).toString();
            String ufSelecionado = modelo.getValueAt(linhaSelecionada, 14).toString();

            Cliente objAlterar = new Cliente(idSelecionado, nomeSelecionado, cpfSelecionado,
                    dataNascimentoSelecionada, generoSelecionado,
                    estadoCivilSelecionado, telefoneSelecionado,
                    emailSelecionado, cepSelecionado, logradouroSelecionado,
                    numeroSelecionado, complementoSelecionado, bairroSelecionado,
                    cidadeSelecionada, ufSelecionado);

            TelaEditarCadastroClientes telaAlterar = new TelaEditarCadastroClientes(objAlterar);
            telaAlterar.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha!");
        }

    }//GEN-LAST:event_btnEditarCadastroActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed

        /**
         * Cria uma instância da classe Validador para validar os campos de
         * texto. Em seguida, verifica se ocorreram erros durante a validação.
         */
        Validador validacao = new Validador();
        validacao.validarTexto(txtNomeCliente);
        validacao.validarTexto(txtCPFCliente);
        validacao.validarTexto(txtDtNascimentoCliente);
        validacao.validarTexto(txtGeneroCliente);
        validacao.validarTexto(txtEstadoCivilCliente);
        validacao.validarTexto(txtTelFixCliente);
        validacao.validarTexto(txtEmailCliente);
        validacao.validarTexto(txtCEPCliente);
        validacao.validarTexto(txtLogCliente);
        validacao.validarTexto(txtNumCliente);
        validacao.validarTexto(txtComplementoCliente);
        validacao.validarTexto(txtBairroCliente);
        validacao.validarTexto(txtCidadeCliente);
        validacao.validarSelecaoComboBox(cboUFCliente);

        /**
         * Se houver erros, obtém as mensagens de erro e o exibe na tela. Caso
         * contrário, exibe uma mensagem de cadastro bem-sucedido e adiciona os
         * dados digitados à tabela.
         */
        if (validacao.hasErro()) {
            String mensagensDeErro = validacao.getMensagensErro();
            JOptionPane.showMessageDialog(rootPane, mensagensDeErro);

        } else {

            String nome = txtNomeCliente.getText();
            String cpf = txtCPFCliente.getText();
            String dtNascimentoCliente = txtDtNascimentoCliente.getText();
            String genero = txtGeneroCliente.getText();
            String estadoCivil = txtEstadoCivilCliente.getText();
            String telefone = txtTelFixCliente.getText();
            String email = txtEmailCliente.getText();
            String cep = txtCEPCliente.getText();
            String logradouro = txtLogCliente.getText();
            String numero = txtNumCliente.getText();
            String complemento = txtComplementoCliente.getText();
            String bairro = txtBairroCliente.getText();
            String cidade = txtCidadeCliente.getText();
            String uf = cboUFCliente.getSelectedItem().toString();
            
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyy");
            Date dataNascimento = Date.valueOf(sdf.format(dtNascimentoCliente));

            Cliente cliente = new Cliente(nome, cpf, dataNascimento, genero, estadoCivil, telefone,
                    email, cep, logradouro, numero, complemento, bairro, cidade, uf);

            //Verifica se existe algum cadastro com o CPF informado pelo usuário.
            boolean cadastroExiste = ClienteDAO.verificarExistenciaCadastroCPF(cpf);

            /**
             * Se existir um cadastro para o CPF informado, ele emite uma
             * mensagem informando a existência desse cadastro. Caso contrário,
             * ele permite o novo cadastro ser gravado.
             */
            if (cadastroExiste == true) {

                JOptionPane.showMessageDialog(rootPane, "Cliente já cadastrado no sistema!");

            } else {

                boolean retorno = ClienteDAO.cadastrarCliente(cliente);

                if (retorno == true) {
                    JOptionPane.showMessageDialog(rootPane, "Cadastro efetuado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Falha no cadastro!");
                }

                recarregarTabelaClientes();
            }

            /**
             * Cria uma instância da classe Utils para utilização dos métodos de
             * limpeza de campos. Utiliza dos métodos limparCampos para "apagar"
             * os dados digitados nos painéis pnlDadosBasicos e pnlEndereco.
             */
//            Utils limpar = new Utils();
//            limpar.limparCampos(pnlDadosBasicos);
//            limpar.limparCampos(pnlEndereco);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private static void recarregarTabelaClientes() {
        ///TODO: Chamar a DAO   
        ArrayList<Cliente> lista = ClienteDAO.listarClientes();

        DefaultTableModel modelo = (DefaultTableModel) tblCadClientes.getModel();
        modelo.setRowCount(0);

        for (Cliente cliente : lista) {

//            LocalDate clienteDataNasc = LocalDate.parse(cliente.getDataNascimentoCliente().toString());
//
//            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
//            LocalDate dataNasc = LocalDate.parse(clienteDataNasc.toString(), formato);
            modelo.addRow(new String[]{
                String.valueOf(cliente.getIdCliente()),
                String.valueOf(cliente.getNomeCliente()),
                String.valueOf(cliente.getCpfCliente()),
                String.valueOf(cliente.getDataNascimentoCliente()),
                String.valueOf(cliente.getGeneroCliente()),
                String.valueOf(cliente.getEstadoCivilCliente()),
                String.valueOf(cliente.getTelefoneCliente()),
                String.valueOf(cliente.getEmailCliente()),
                String.valueOf(cliente.getCepCliente()),
                String.valueOf(cliente.getLogradouroCliente()),
                String.valueOf(cliente.getNumeroCliente()),
                String.valueOf(cliente.getComplementoCliente()),
                String.valueOf(cliente.getBairroCliente()),
                String.valueOf(cliente.getCidadeCliente()),
                String.valueOf(cliente.getUfCliente())
            });
        }
    }

    private void txtBuscaCliente_CPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaCliente_CPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaCliente_CPFActionPerformed

    private void btnLimparBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparBuscaActionPerformed

        /**
         * Atribui valores vazios aos rótulos para limpeza dos rótulos. E, cria
         * uma instância da classe Utils para utilização dos métodos de limpeza
         * de campos. Por fim, utiliza dos métodos limparCampos para "apagar" os
         * dados digitados no painel pnlBuscarCliente.
         */
        lblBuscaNome.setText("Cliente: ");
        lblBuscaCPF.setText("CPF: ");
        lblBuscaDtNasc.setText("Data de Nascimento: ");
        lblBuscaTel.setText("Telefone: ");
        lblBuscaEnd.setText("Endereço: ");

        Utils limpar = new Utils();
        limpar.limparCampos(pnlBuscarCliente);
        recarregarTabelaClientes();

    }//GEN-LAST:event_btnLimparBuscaActionPerformed

    private void txtCPFClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFClienteActionPerformed

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed

        /**
         * Cria uma instância da classe Utils para utilização dos métodos de
         * limpeza de campos. Utiliza dos métodos limparCampos para "apagar" os
         * dados digitados nos painéis pnlDadosBasicos e pnlEndereco.
         */
        Utils limpar = new Utils();
        limpar.limparCampos(pnlDadosBasicos);
        limpar.limparCampos(pnlEndereco);

    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void txtNomeClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeClienteKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtNomeCliente. Por fim,
         * chama o método limitarEntradaTexto para restringir a entrada de texto
         * no campo txtNomeCliente.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtNomeCliente, 100);
        validacao.limitarEntradaTexto(evt, txtNomeCliente);
    }//GEN-LAST:event_txtNomeClienteKeyTyped

    private void txtGeneroClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGeneroClienteKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtGeneroCliente. Por fim,
         * chama o método limitarEntradaTexto para restringir a entrada de texto
         * no campo txtGeneroCliente.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtGeneroCliente, 30);
        validacao.limitarEntradaTexto(evt, txtGeneroCliente);
    }//GEN-LAST:event_txtGeneroClienteKeyTyped

    private void txtEstadoCivilClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoCivilClienteKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtEstadoCivilCliente. Por
         * fim, chama o método limitarEntradaTexto para restringir a entrada de
         * texto no campo txtEstadoCivilCliente.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtEstadoCivilCliente, 30);
        validacao.limitarEntradaTexto(evt, txtEstadoCivilCliente);
    }//GEN-LAST:event_txtEstadoCivilClienteKeyTyped

    private void txtEmailClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailClienteKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtEmailCliente.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtEmailCliente, 100);
    }//GEN-LAST:event_txtEmailClienteKeyTyped

    private void txtLogClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLogClienteKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtLogCliente. Por fim, chama
         * o método limitarEntradaTexto para restringir a entrada de texto no
         * campo txtLogCliente.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtLogCliente, 100);
        validacao.limitarEntradaTexto(evt, txtLogCliente);
    }//GEN-LAST:event_txtLogClienteKeyTyped

    private void txtNumClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumClienteKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtNumCliente. Por fim, chama
         * o método limitarEntradaNumerica para restringir a entrada de números
         * no campo txtNumCliente.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtNumCliente, 8);
        validacao.limitarEntradaNumerica(evt, txtNumCliente);
    }//GEN-LAST:event_txtNumClienteKeyTyped

    private void txtBairroClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroClienteKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtBairroCliente. Por fim,
         * chama o método limitarEntradaTexto para restringir a entrada de texto
         * no campo txtBairroCliente.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtBairroCliente, 30);
        validacao.limitarEntradaTexto(evt, txtBairroCliente);
    }//GEN-LAST:event_txtBairroClienteKeyTyped

    private void txtComplementoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComplementoClienteKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtComplementoCliente.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtComplementoCliente, 30);
    }//GEN-LAST:event_txtComplementoClienteKeyTyped

    private void txtCidadeClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeClienteKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtCidadeCliente. Por fim,
         * chama o método limitarEntradaTexto para restringir a entrada de texto
         * no campo txtCidadeCliente.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtCidadeCliente, 50);
        validacao.limitarEntradaTexto(evt, txtCidadeCliente);
    }//GEN-LAST:event_txtCidadeClienteKeyTyped

    private void txtBuscaCliente_NomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaCliente_NomeKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Em
         * seguida, chama o método limitarQuantidadeCaracteres para limitar o
         * número de caracteres inseridos no campo txtBuscaCliente_Nome. Por
         * fim, chama o método limitarEntradaTexto para restringir a entrada de
         * texto no campo txtBuscaCliente_Nome.
         */
        Validador validacao = new Validador();
        validacao.limitarQuantidadeCaracteres(evt, txtBuscaCliente_Nome, 100);
        validacao.limitarEntradaTexto(evt, txtBuscaCliente_Nome);
    }//GEN-LAST:event_txtBuscaCliente_NomeKeyTyped

    private void mnuItemCadastroClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemCadastroClientesActionPerformed

        /**
         * Instancia um novo objeto da classe TelaCadastroCliente através do
         * menubar e o torna visível. Em seguida, oculta a janela atual.
         */
        new TelaCadastroCliente().setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_mnuItemCadastroClientesActionPerformed

    private void mnuItemCadastroProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemCadastroProdutosActionPerformed

        /**
         * Instancia um novo objeto da classe TelaProdutos através do menubar e
         * o torna visível. Em seguida, oculta a janela atual.
         */
        new TelaProdutos().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_mnuItemCadastroProdutosActionPerformed

    private void mnuItemRelatorioVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemRelatorioVendasActionPerformed

        /**
         * Instancia um novo objeto da classe TelaRelatorio através do menubar e
         * o torna visível. Em seguida, oculta a janela atual.
         */
        new TelaRelatorio().setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_mnuItemRelatorioVendasActionPerformed

    private void txtGeneroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGeneroClienteActionPerformed

    }//GEN-LAST:event_txtGeneroClienteActionPerformed

    private void txtTelFixClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelFixClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelFixClienteActionPerformed

    private void txtDtNascimentoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDtNascimentoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDtNascimentoClienteActionPerformed

    private void txtDtNascimentoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDtNascimentoClienteKeyTyped
        Validador validacao = new Validador();

        validacao.validarTexto(txtDtNascimentoCliente);
    }//GEN-LAST:event_txtDtNascimentoClienteKeyTyped

    private void btnExcluirCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirCadastroActionPerformed

        int linhaSelecionada = tblCadClientes.getSelectedRow();

        if (linhaSelecionada >= 0) {

            DefaultTableModel modelo = (DefaultTableModel) tblCadClientes.getModel();
            int idClienteExcluir = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());

            boolean retorno = ClienteDAO.excluirCliente(idClienteExcluir);

            if (retorno == true) {
                JOptionPane.showMessageDialog(null, "Cadastro excluído com sucesso!");
                recarregarTabelaClientes();
            } else {
                JOptionPane.showMessageDialog(null, "Não foi possível excluir!");
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione um cadastro!");
        }
    }//GEN-LAST:event_btnExcluirCadastroActionPerformed

    private void btnAtualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarTabelaActionPerformed
        recarregarTabelaClientes();
    }//GEN-LAST:event_btnAtualizarTabelaActionPerformed

    private void btnBuscarPorNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorNomeClienteActionPerformed

        Validador validacao = new Validador();
        validacao.validarTexto(txtBuscaCliente_Nome);

        if (validacao.hasErro()) {
            String mensagensDeErro = validacao.getMensagensErro();
            JOptionPane.showMessageDialog(rootPane, mensagensDeErro);
        } else {

            String nomeClienteBuscar = txtBuscaCliente_Nome.getText();
            ArrayList<Cliente> listaClientesPorNome = ClienteDAO.buscarPorNomeCliente(nomeClienteBuscar);

            DefaultTableModel modelo = (DefaultTableModel) tblCadClientes.getModel();
            modelo.setRowCount(0);

            for (Cliente cliente : listaClientesPorNome) {

                modelo.addRow(new String[]{
                    String.valueOf(cliente.getIdCliente()),
                    String.valueOf(cliente.getNomeCliente()),
                    String.valueOf(cliente.getCpfCliente()),
                    String.valueOf(cliente.getDataNascimentoCliente()),
                    String.valueOf(cliente.getGeneroCliente()),
                    String.valueOf(cliente.getEstadoCivilCliente()),
                    String.valueOf(cliente.getTelefoneCliente()),
                    String.valueOf(cliente.getEmailCliente()),
                    String.valueOf(cliente.getCepCliente()),
                    String.valueOf(cliente.getLogradouroCliente()),
                    String.valueOf(cliente.getNumeroCliente()),
                    String.valueOf(cliente.getComplementoCliente()),
                    String.valueOf(cliente.getBairroCliente()),
                    String.valueOf(cliente.getCidadeCliente()),
                    String.valueOf(cliente.getUfCliente())
                });
            }
        }

    }//GEN-LAST:event_btnBuscarPorNomeClienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroCliente().setVisible(true);
                recarregarTabelaClientes();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarTabela;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarPorNomeCliente;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnEditarCadastro;
    private javax.swing.JButton btnExcluirCadastro;
    private javax.swing.JButton btnLimparBusca;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton btnNavBarProdutos;
    private javax.swing.JButton btnNavBarRelatorio;
    private javax.swing.JButton btnNavBarVendas;
    private javax.swing.JComboBox<String> cboUFCliente;
    private javax.swing.JLabel lblBTCBakery;
    private javax.swing.JLabel lblBuscaCPF;
    private javax.swing.JLabel lblBuscaClienteCPF;
    private javax.swing.JLabel lblBuscaCliente_Nome;
    private javax.swing.JLabel lblBuscaDtNasc;
    private javax.swing.JLabel lblBuscaEnd;
    private javax.swing.JLabel lblBuscaNome;
    private javax.swing.JLabel lblBuscaTel;
    private javax.swing.JLabel lblBuscarCliente;
    private javax.swing.JLabel lblCadastro;
    private javax.swing.JLabel lblCliente_Bairro;
    private javax.swing.JLabel lblCliente_CEP;
    private javax.swing.JLabel lblCliente_CPF;
    private javax.swing.JLabel lblCliente_Cid;
    private javax.swing.JLabel lblCliente_Compl;
    private javax.swing.JLabel lblCliente_Email;
    private javax.swing.JLabel lblCliente_End;
    private javax.swing.JLabel lblCliente_EstCivil;
    private javax.swing.JLabel lblCliente_Genero;
    private javax.swing.JLabel lblCliente_Log;
    private javax.swing.JLabel lblCliente_Nome;
    private javax.swing.JLabel lblCliente_Num;
    private javax.swing.JLabel lblCliente_TelFixo;
    private javax.swing.JLabel lblCliente_UF;
    private javax.swing.JLabel lblCliente_dtNasc;
    private javax.swing.JLabel lblDadosBasicos;
    private javax.swing.JLabel lblListaClientes;
    private javax.swing.JLabel lblLogotipo;
    private javax.swing.JLabel lblTituloClientes;
    private javax.swing.JMenu mnuArquivos;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JMenu mnuEditar;
    private javax.swing.JMenuItem mnuItemCadastroClientes;
    private javax.swing.JMenuItem mnuItemCadastroProdutos;
    private javax.swing.JMenuItem mnuItemRelatorioVendas;
    private javax.swing.JPanel pnlBuscarCliente;
    private javax.swing.JPanel pnlCabecalho;
    private javax.swing.JPanel pnlCadastroCliente;
    private javax.swing.JPanel pnlClientes;
    private javax.swing.JPanel pnlDadosBasicos;
    private javax.swing.JLabel pnlDataAtual;
    private javax.swing.JPanel pnlEndereco;
    private javax.swing.JPanel pnlListaClientes;
    private javax.swing.JPanel pnlRodape1;
    private static javax.swing.JTable tblCadClientes;
    private javax.swing.JScrollPane tblCadastoCliente;
    private javax.swing.JTextField txtBairroCliente;
    private javax.swing.JFormattedTextField txtBuscaCliente_CPF;
    private javax.swing.JTextField txtBuscaCliente_Nome;
    private javax.swing.JFormattedTextField txtCEPCliente;
    private javax.swing.JFormattedTextField txtCPFCliente;
    private javax.swing.JTextField txtCidadeCliente;
    private javax.swing.JTextField txtComplementoCliente;
    private javax.swing.JFormattedTextField txtDtNascimentoCliente;
    private javax.swing.JTextField txtEmailCliente;
    private javax.swing.JTextField txtEstadoCivilCliente;
    private javax.swing.JTextField txtGeneroCliente;
    private javax.swing.JTextField txtLogCliente;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JFormattedTextField txtNumCliente;
    private javax.swing.JFormattedTextField txtTelFixCliente;
    // End of variables declaration//GEN-END:variables
}
