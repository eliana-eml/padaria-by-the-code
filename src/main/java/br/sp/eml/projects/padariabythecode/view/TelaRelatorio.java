package br.sp.eml.projects.padariabythecode.view;

import br.sp.eml.projects.padariabythecode.dao.RelatorioDAO;
import br.sp.eml.projects.padariabythecode.model.Relatorio;
import br.sp.eml.projects.padariabythecode.utils.Validador;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import br.sp.eml.projects.padariabythecode.secondscreens.TelaRelatorioAnalitico;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.Timer;

/**
 *
 * @author eduar
 */
public class TelaRelatorio extends javax.swing.JFrame {

    /**
     * Construtor da classe TelaRelatorio. Inicializa os componentes gráficos
     * gerados automaticamente. Em seguida, define a posição da janela ao centro
     * da tela.
     */
    public TelaRelatorio() {
        initComponents();
        setLocationRelativeTo(null);
        //getContentPane().setBackground(Color.decode("#f9f7dc"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        scrollbar1 = new java.awt.Scrollbar();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        pnlBuscaPorID = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        btnVisualizarRelatorioAnalitico = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtIDVendaBuscar = new javax.swing.JTextField();
        btnBuscarVendaID = new javax.swing.JButton();
        pnlBuscarPorData = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnBuscarPorData = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtDataInicio = new com.toedter.calendar.JDateChooser();
        txtDataFim = new com.toedter.calendar.JDateChooser();
        pnlDadosVendas = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblVendas = new javax.swing.JTable();
        btnRecarregarTabela = new javax.swing.JButton();
        pnlCabecalho = new javax.swing.JPanel();
        btnNavBarVendas = new javax.swing.JButton();
        btnNavBarClientes = new javax.swing.JButton();
        btnNavBarProdutos = new javax.swing.JButton();
        lbNomePadaria = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pnlRodape1 = new javax.swing.JPanel();
        pnlHoraAtual = new javax.swing.JLabel();
        pnlDataAtual = new javax.swing.JLabel();
        pnlProdutos = new javax.swing.JPanel();
        lbTituloVendas2 = new javax.swing.JLabel();
        pnlDetalhesVendasPorPeriodo = new javax.swing.JPanel();
        labelDataFinal = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        valorPorPeriodo = new javax.swing.JLabel();
        labelDataInicio = new javax.swing.JLabel();
        mnuBar = new javax.swing.JMenuBar();
        mnuArquivos = new javax.swing.JMenu();
        mnuItemCadastroClientes = new javax.swing.JMenuItem();
        mnuItemCadastroProdutos = new javax.swing.JMenuItem();
        mnuRelatorioVendas = new javax.swing.JMenuItem();
        mnuEditar = new javax.swing.JMenu();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlBuscaPorID.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnVisualizarRelatorioAnalitico.setText("Visualizar Relatório Analítico");
        btnVisualizarRelatorioAnalitico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarRelatorioAnaliticoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("BUSCA POR ID");

        jLabel10.setText("ID Venda:");

        txtIDVendaBuscar.setName("ID Venda"); // NOI18N
        txtIDVendaBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDVendaBuscarKeyTyped(evt);
            }
        });

        btnBuscarVendaID.setText("Buscar");
        btnBuscarVendaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarVendaIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuscaPorIDLayout = new javax.swing.GroupLayout(pnlBuscaPorID);
        pnlBuscaPorID.setLayout(pnlBuscaPorIDLayout);
        pnlBuscaPorIDLayout.setHorizontalGroup(
            pnlBuscaPorIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscaPorIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBuscaPorIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBuscaPorIDLayout.createSequentialGroup()
                        .addGroup(pnlBuscaPorIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel10))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnVisualizarRelatorioAnalitico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlBuscaPorIDLayout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addGap(271, 271, 271))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBuscaPorIDLayout.createSequentialGroup()
                        .addComponent(txtIDVendaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarVendaID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlBuscaPorIDLayout.setVerticalGroup(
            pnlBuscaPorIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscaPorIDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBuscaPorIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarVendaID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlBuscaPorIDLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtIDVendaBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)))
                .addGap(11, 11, 11)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVisualizarRelatorioAnalitico, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlBuscarPorData.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setText("Data Início:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel9.setText("BUSCA POR DATA");

        btnBuscarPorData.setText("Visualizar Relatório do Período");
        btnBuscarPorData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorDataActionPerformed(evt);
            }
        });

        jLabel1.setText("Data Final:");

        txtDataInicio.setDateFormatString("dd/MM/yyyy");
        txtDataInicio.setMaxSelectableDate(new java.util.Date(253370779298000L));

        txtDataFim.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout pnlBuscarPorDataLayout = new javax.swing.GroupLayout(pnlBuscarPorData);
        pnlBuscarPorData.setLayout(pnlBuscarPorDataLayout);
        pnlBuscarPorDataLayout.setHorizontalGroup(
            pnlBuscarPorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarPorDataLayout.createSequentialGroup()
                .addGroup(pnlBuscarPorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBuscarPorDataLayout.createSequentialGroup()
                        .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarPorData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlBuscarPorDataLayout.createSequentialGroup()
                        .addGroup(pnlBuscarPorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBuscarPorDataLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9))
                            .addGroup(pnlBuscarPorDataLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(52, 52, 52)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlBuscarPorDataLayout.setVerticalGroup(
            pnlBuscarPorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarPorDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBuscarPorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBuscarPorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDataFim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDataInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBuscarPorData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDadosVendas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setText("LISTA DE VENDAS");

        tblVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Venda", "Data da Compra", "ID Cliente", "Cliente", "CPF Cliente", "Valor Total Venda"
            }
        ));
        jScrollPane3.setViewportView(tblVendas);

        btnRecarregarTabela.setText("Recarregar Tabela");
        btnRecarregarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecarregarTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosVendasLayout = new javax.swing.GroupLayout(pnlDadosVendas);
        pnlDadosVendas.setLayout(pnlDadosVendasLayout);
        pnlDadosVendasLayout.setHorizontalGroup(
            pnlDadosVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosVendasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                    .addGroup(pnlDadosVendasLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosVendasLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRecarregarTabela)))
                .addContainerGap())
        );
        pnlDadosVendasLayout.setVerticalGroup(
            pnlDadosVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosVendasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRecarregarTabela)
                .addContainerGap())
        );

        pnlCabecalho.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnNavBarVendas.setText("Vendas");
        btnNavBarVendas.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnNavBarVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNavBarVendasActionPerformed(evt);
            }
        });

        btnNavBarClientes.setText("Clientes");
        btnNavBarClientes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnNavBarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNavBarClientesActionPerformed(evt);
            }
        });

        btnNavBarProdutos.setText("Produtos");
        btnNavBarProdutos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnNavBarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNavBarProdutosActionPerformed(evt);
            }
        });

        lbNomePadaria.setFont(new java.awt.Font("Harrington", 0, 36)); // NOI18N
        lbNomePadaria.setForeground(new java.awt.Color(218, 111, 63));
        lbNomePadaria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbNomePadaria.setText("By The Code Bakery");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/sp/eml/projects/padariabythecode/utils/Imagem1.png"))); // NOI18N
        jLabel3.setLabelFor(pnlCabecalho);
        jLabel3.setToolTipText("");

        javax.swing.GroupLayout pnlCabecalhoLayout = new javax.swing.GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbNomePadaria, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNavBarVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNavBarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnNavBarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNomePadaria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNavBarVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNavBarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNavBarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlRodape1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pnlHoraAtual.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pnlHoraAtual.setText("--:--:--");
        pnlHoraAtual.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        pnlHoraAtual.setAlignmentY(0.0F);
        pnlHoraAtual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pnlHoraAtualFocusGained(evt);
            }
        });

        pnlDataAtual.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pnlDataAtual.setText("26/09/2023");
        pnlDataAtual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pnlDataAtualFocusGained(evt);
            }
        });

        javax.swing.GroupLayout pnlRodape1Layout = new javax.swing.GroupLayout(pnlRodape1);
        pnlRodape1.setLayout(pnlRodape1Layout);
        pnlRodape1Layout.setHorizontalGroup(
            pnlRodape1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRodape1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlDataAtual)
                .addGap(18, 18, 18)
                .addComponent(pnlHoraAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pnlRodape1Layout.setVerticalGroup(
            pnlRodape1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRodape1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRodape1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pnlHoraAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlDataAtual))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlProdutos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbTituloVendas2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbTituloVendas2.setText("RELATÓRIO");

        javax.swing.GroupLayout pnlProdutosLayout = new javax.swing.GroupLayout(pnlProdutos);
        pnlProdutos.setLayout(pnlProdutosLayout);
        pnlProdutosLayout.setHorizontalGroup(
            pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTituloVendas2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlProdutosLayout.setVerticalGroup(
            pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTituloVendas2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDetalhesVendasPorPeriodo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelDataFinal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelDataFinal.setText("--/--/----");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel11.setText("DETALHES VENDAS POR PERÍODO");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Data Final:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Data Início:");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Total de Vendas por Período:");

        valorPorPeriodo.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        valorPorPeriodo.setText("R$ ---.---,--");

        labelDataInicio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelDataInicio.setText("--/--/----");

        javax.swing.GroupLayout pnlDetalhesVendasPorPeriodoLayout = new javax.swing.GroupLayout(pnlDetalhesVendasPorPeriodo);
        pnlDetalhesVendasPorPeriodo.setLayout(pnlDetalhesVendasPorPeriodoLayout);
        pnlDetalhesVendasPorPeriodoLayout.setHorizontalGroup(
            pnlDetalhesVendasPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalhesVendasPorPeriodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDetalhesVendasPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDetalhesVendasPorPeriodoLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valorPorPeriodo))
                    .addGroup(pnlDetalhesVendasPorPeriodoLayout.createSequentialGroup()
                        .addGroup(pnlDetalhesVendasPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(pnlDetalhesVendasPorPeriodoLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelDataInicio))
                            .addGroup(pnlDetalhesVendasPorPeriodoLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelDataFinal)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDetalhesVendasPorPeriodoLayout.setVerticalGroup(
            pnlDetalhesVendasPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetalhesVendasPorPeriodoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDetalhesVendasPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(labelDataInicio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDetalhesVendasPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(labelDataFinal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDetalhesVendasPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(valorPorPeriodo))
                .addContainerGap())
        );

        mnuArquivos.setText("Arquivos");

        mnuItemCadastroClientes.setText("Cadastro Clientes");
        mnuItemCadastroClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemCadastroClientesActionPerformed(evt);
            }
        });
        mnuArquivos.add(mnuItemCadastroClientes);

        mnuItemCadastroProdutos.setText("Cadastro Produtos");
        mnuItemCadastroProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemCadastroProdutosActionPerformed(evt);
            }
        });
        mnuArquivos.add(mnuItemCadastroProdutos);

        mnuRelatorioVendas.setText("Relatório de Vendas");
        mnuRelatorioVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRelatorioVendasActionPerformed(evt);
            }
        });
        mnuArquivos.add(mnuRelatorioVendas);

        mnuBar.add(mnuArquivos);

        mnuEditar.setText("Editar");
        mnuBar.add(mnuEditar);

        setJMenuBar(mnuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlRodape1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCabecalho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlDadosVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlBuscarPorData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlBuscaPorID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlDetalhesVendasPorPeriodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlCabecalho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlDadosVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlBuscarPorData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(pnlDetalhesVendasPorPeriodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlBuscaPorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRodape1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarVendaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarVendaIDActionPerformed

        /**
         * Cria de uma instância da classe Validador para validar os campos de
         * texto. Em seguida, verifica se ocorreram erros durante a validação.
         */
        Validador validacao = new Validador();
        validacao.validarTexto(txtIDVendaBuscar);

        try {
            ArrayList<Relatorio> item = RelatorioDAO.listaRelatorioPorId(Integer.parseInt(txtIDVendaBuscar.getText()));

            DefaultTableModel modelo = (DefaultTableModel) tblVendas.getModel();
            modelo.setRowCount(0);

            for (Relatorio lista : item) {
                modelo.addRow(new String[]{
                    String.valueOf(lista.getIdVenda()),
                    String.valueOf(lista.getDataVenda()),
                    String.valueOf(lista.getIdCliente()),
                    String.valueOf(lista.getNomeCliente()),
                    String.valueOf(lista.getCpfCliente()),
                    String.valueOf(lista.getValorTotalVenda()),});
                //valorPorPeriodo.setText(String.valueOf(lista.getValorTotalVendasPeriodo()));
            }

        } catch (SQLException ex) {
            Logger.getLogger(TelaRelatorio.class.getName()).log(Level.SEVERE, null, ex);
        }

        /**
         * Se houver erros, obtém as mensagens de erro e o exibe na tela. Caso
         * contrário, buscará as informações da venda com o ID informado no
         * banco de dados.
         */
        if (validacao.hasErro()) {
            String mensagensDeErro = validacao.getMensagensErro();
            JOptionPane.showMessageDialog(rootPane, mensagensDeErro);
        } else {
            //Buscar no banco de dados o ID informado.
        }
    }//GEN-LAST:event_btnBuscarVendaIDActionPerformed

    private void txtIDVendaBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDVendaBuscarKeyTyped

        /**
         * Cria uma instância da classe Validador para realizar validações. Por
         * fim, chama o método limitarEntradaNumerica para restringir a entrada
         * de números no campo txtIDVendaBuscar.
         */
        Validador validacao = new Validador();
        validacao.limitarEntradaNumerica(evt, txtIDVendaBuscar);
    }//GEN-LAST:event_txtIDVendaBuscarKeyTyped

    private void mnuItemCadastroClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemCadastroClientesActionPerformed

        /**
         * Instancia um novo objeto da classe TelaCadastroCliente através do
         * menubar e o torna visível. Em seguida, oculta a janela atual.
         */
        new TelaCadastroCliente().setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_mnuItemCadastroClientesActionPerformed

    private void mnuItemCadastroProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemCadastroProdutosActionPerformed

        /**
         * Instancia um novo objeto da classe TelaProdutos através do menubar e
         * o torna visível. Em seguida, oculta a janela atual.
         */
        new TelaProdutos().setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_mnuItemCadastroProdutosActionPerformed

    private void mnuRelatorioVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRelatorioVendasActionPerformed

        /**
         * Instancia um novo objeto da classe TelaRelatorio através do menubar e
         * o torna visível. Em seguida, oculta a janela atual.
         */
        new TelaRelatorio().setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_mnuRelatorioVendasActionPerformed

    private void btnVisualizarRelatorioAnaliticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarRelatorioAnaliticoActionPerformed

        /**
         * Instancia um novo objeto da classe TelaRelatorioAnalitico e o torna
         * visível. Essa tela vai puxar do banco de dados o relatório preenchido
         * com informações mais detalhadas da venda que foi buscada e exibida no
         * campo de Detalhes.
         */
        try {
            int linhaSelecionada = tblVendas.getSelectedRow();

            DefaultTableModel modelo = (DefaultTableModel) tblVendas.getModel();

            int idSelecionado = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());
            double precoTotal = Double.parseDouble(modelo.getValueAt(linhaSelecionada, 5).toString());

            TelaRelatorioAnalitico telaRelatorio = new TelaRelatorioAnalitico(idSelecionado, precoTotal);
            telaRelatorio.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha antes");
        }


    }//GEN-LAST:event_btnVisualizarRelatorioAnaliticoActionPerformed

    private static void listaRelatorioVendas() throws SQLException {
        ArrayList<Relatorio> lista = RelatorioDAO.listaRelatorios();

        DefaultTableModel modelo = (DefaultTableModel) tblVendas.getModel();
        modelo.setRowCount(0);

        for (Relatorio item : lista) {
            modelo.addRow(new String[]{
                String.valueOf(item.getIdVenda()),
                String.valueOf(item.getDataVenda()),
                String.valueOf(item.getIdCliente()),
                String.valueOf(item.getNomeCliente()),
                String.valueOf(item.getCpfCliente()),
                String.valueOf(item.getValorTotalVenda())
            });
        }

    }

    public void defineData() {
        
        Date dataSistema = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        pnlDataAtual.setText(formato.format(dataSistema));
        
        
       //.setText(String.format("%1$tH:%1$tM:%1$tS", calendar));
        Timer timer = new Timer(1000, new hora()); 
        timer.start();
        
        Calendar calendar = Calendar.getInstance();
        
   /*
    * 
    * int ano = calendar.get(Calendar.YEAR);
        int mes = calendar.get(Calendar.MONTH) + 1;
        int dia = calendar.get(Calendar.DAY_OF_MONTH);

        String data = Integer.toString(dia) + "/" + Integer.toString(mes) + "/" + Integer.toString(ano);

       

            int horas = calendar.get(Calendar.HOUR);
            int minutos = calendar.get(Calendar.MINUTE);
            int segundos = calendar.get(Calendar.SECOND);

            String horarioAtual = Integer.toString(horas) + ":" + Integer.toString(minutos) + ":" + Integer.toString(segundos);

            pnlDataAtual.setText(data + " - " + horarioAtual);
            System.out.println(data + " - " + horarioAtual);
            * 
            * 
           */
    }
    private void btnRecarregarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecarregarTabelaActionPerformed

        try {
            listaRelatorioVendas();
        } catch (SQLException ex) {
            Logger.getLogger(TelaRelatorio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRecarregarTabelaActionPerformed


    private void btnBuscarPorDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorDataActionPerformed
        /**
         * Se houver erros, obtém as mensagens de erro e o exibe na tela. Caso
         * contrário, buscará as informações no período informado no banco de
         * dados.
         */
        if (txtDataInicio.getDate() == null || txtDataFim.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos antes de realizar a busca!");
        } else if (txtDataFim.getDate().before(txtDataInicio.getDate())) {
            JOptionPane.showMessageDialog(rootPane, "Preencha uma data maior ou igual a de início!");
        } else {
            String dateFormated = DateFormat.getDateInstance(DateFormat.SHORT).format(txtDataInicio.getDate());
            String finalDateFormated = DateFormat.getDateInstance(DateFormat.SHORT).format(txtDataFim.getDate());

            //Formatando datas
            labelDataInicio.setText(dateFormated);
            labelDataFinal.setText(finalDateFormated);

            Date formatDataInicioToSql = new java.sql.Date(txtDataInicio.getDate().getTime());
            Date formatDataFinalToSql = new java.sql.Date(txtDataFim.getDate().getTime());

            try {
                ArrayList<Relatorio> item = RelatorioDAO.listaRelatorioPorData(formatDataInicioToSql.toString(), formatDataFinalToSql.toString());

                DefaultTableModel modelo = (DefaultTableModel) tblVendas.getModel();
                modelo.setRowCount(0);

                for (Relatorio lista : item) {
                    modelo.addRow(new String[]{
                        String.valueOf(lista.getIdVenda()),
                        String.valueOf(lista.getDataVenda()),
                        String.valueOf(lista.getIdCliente()),
                        String.valueOf(lista.getNomeCliente()),
                        String.valueOf(lista.getCpfCliente()),
                        String.valueOf(lista.getValorTotalVenda())
                    });
                    valorPorPeriodo.setText(String.valueOf(lista.getValorTotalVendasPeriodo()));
                }

            } catch (SQLException ex) {
                Logger.getLogger(TelaRelatorio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBuscarPorDataActionPerformed

    private void pnlHoraAtualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pnlHoraAtualFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlHoraAtualFocusGained

    private void btnNavBarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNavBarProdutosActionPerformed

        /**
         * Instancia um novo objeto da classe TelaProdutos e o torna visível. Em
         * seguida, oculta a janela atual.
         */
        new TelaProdutos().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnNavBarProdutosActionPerformed

    private void btnNavBarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNavBarClientesActionPerformed

        /**
         * Instancia um novo objeto da classe TelaCadastroCliente e o torna
         * visível. Em seguida, oculta a janela atual.
         */
        new TelaCadastroCliente().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnNavBarClientesActionPerformed

    private void btnNavBarVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNavBarVendasActionPerformed

        /**
         * Instancia um novo objeto da classe TelaPrincipalVendas e o torna
         * visível. Em seguida, oculta a janela atual.
         */
        new TelaPrincipalVendas().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnNavBarVendasActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        defineData();
    }//GEN-LAST:event_formWindowOpened

    private void pnlDataAtualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pnlDataAtualFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlDataAtualFocusGained
    
    class hora implements ActionListener{ 
            @Override
            public void actionPerformed(ActionEvent e){
                Calendar calendar = Calendar.getInstance();
               pnlHoraAtual.setText(String.format("%1$tH:%1$tM:%1$tS", calendar));
                
            }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRelatorio().setVisible(true);
                try {
                    listaRelatorioVendas();
                } catch (SQLException ex) {
                    Logger.getLogger(TelaRelatorio.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPorData;
    private javax.swing.JButton btnBuscarVendaID;
    private javax.swing.JButton btnNavBarClientes;
    private javax.swing.JButton btnNavBarProdutos;
    private javax.swing.JButton btnNavBarVendas;
    private javax.swing.JButton btnRecarregarTabela;
    private javax.swing.JButton btnVisualizarRelatorioAnalitico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private static javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelDataFinal;
    private javax.swing.JLabel labelDataInicio;
    private javax.swing.JLabel lbNomePadaria;
    private javax.swing.JLabel lbTituloVendas2;
    private javax.swing.JMenu mnuArquivos;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JMenu mnuEditar;
    private javax.swing.JMenuItem mnuItemCadastroClientes;
    private javax.swing.JMenuItem mnuItemCadastroProdutos;
    private javax.swing.JMenuItem mnuRelatorioVendas;
    private javax.swing.JPanel pnlBuscaPorID;
    private javax.swing.JPanel pnlBuscarPorData;
    private javax.swing.JPanel pnlCabecalho;
    private javax.swing.JPanel pnlDadosVendas;
    private static javax.swing.JLabel pnlDataAtual;
    private javax.swing.JPanel pnlDetalhesVendasPorPeriodo;
    private static javax.swing.JLabel pnlHoraAtual;
    private javax.swing.JPanel pnlProdutos;
    private javax.swing.JPanel pnlRodape1;
    private java.awt.Scrollbar scrollbar1;
    private static javax.swing.JTable tblVendas;
    private com.toedter.calendar.JDateChooser txtDataFim;
    private com.toedter.calendar.JDateChooser txtDataInicio;
    private javax.swing.JTextField txtIDVendaBuscar;
    private javax.swing.JLabel valorPorPeriodo;
    // End of variables declaration//GEN-END:variables
}
